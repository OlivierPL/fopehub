local v1 = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"))
v1.Message.New("Thanks for using Fope Hub!")
v1.Message.New("Using an Alt? Make sure to use alts to keep your main safe!")  --stfu faggot adam

local lib = loadstring(game:HttpGet("https://raw.githubusercontent.com/OlivierPL/FopeUiLib/main/FopeHubUI"))()
main = lib:Window()

local Combat = main:Tab("Combat")
local window = main:Tab("Other")

Combat:Label("Main:")
Combat:Button(
"Unlock All Guns",
function()
    local v1 = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"))
    v1.GunCmds.DoesOwnGun = function()
        return true
    end
    local m = getrawmetatable(game)
    local runservice = game:GetService("RunService")
    local uis = game:GetService("UserInputService")
    setreadonly(m, false)
    local on = false
    local namecall = m.__namecall
    local function namecallfunction(self, ...)
        local args = {...}
        if getnamecallmethod() == "FireServer" then
            if tostring(self) == "request respawn" then
                if args[1] then
                    if args[1][1] then
                        args[1][1][1] = "1"
                    end
                end
            end
        end
        return namecall(self, unpack(args))
    end
    m.__namecall = namecallfunction
    setreadonly(m, true)
end
)
t_SilentAim = false
Combat:Toggle(
"Silent Aim",
function(State)
    t_SilentAim = State
end
)
Combat:Label("Gun Mods:")
Combat:Dropdown(
"Gun Mods",
{"Remove Firerate", "Inf Damage", "Always Automatic", "No Drop"},
function(Mod)
    if Mod == "Remove Firerate" then
        Firerate()
    end
    if Mod == "Inf Damage" then
        infD()
    end
    if Mod == "Always Automatic" then
        Auto()
    end
    if Mod == "No Drop" then
        NoDrop()
    end
end
)
function Firerate()
for i, v in pairs(getgc(true)) do
    if type(v) == "table" and rawget(v, "firerate") then
        v.firerate = 0.00001
    end
end
end
function infD()
for i, v in pairs(getgc(true)) do
    if type(v) == "table" and rawget(v, "firerate") then
        v.damage = 5000
        v.gadgetDamage = 80000
    end
end
end
function Auto()
for i, v in pairs(getgc(true)) do
    if type(v) == "table" and rawget(v, "firerate") then
        v.automatic = true
    end
end
end
function NoDrop()
for i, v in pairs(getgc(true)) do
    if type(v) == "table" and rawget(v, "firerate") then
        v.velocity = 50000
    end
end
end
Combat:Slider(
"Custom Zoom",1,6,
function(Value)
    v_ZOOM = Value
end
)

Combat:Label("Extras:")
Combat:Button(
"Destroy Drones",
function()
    for i, v in pairs(workspace["__THINGS"].Drones:GetChildren()) do
        workspace["__THINGS"]["__REMOTES"]["do drone damage"]:FireServer(
            {[1] = {[1] = v, [2] = math.huge}, [2] = {[1] = false, [2] = false}}
        )
    end
end
)
Combat:Button(
"Destroy Sentries",
function()
    for i, v in pairs(workspace["__THINGS"].Sentries:GetChildren()) do
        workspace["__THINGS"]["__REMOTES"]["do sentry damage"]:FireServer(
            {[1] = {[1] = v, [2] = math.huge}, [2] = {[1] = false, [2] = false}}
        )
    end
end
)

v_ZOOM = 2

v_AddSpeed = 1
window:Slider(
"Additional Speed",
1,
5,
function(Value)
    v_AddSpeed = Value
end
)

window:Slider(
"JumpPower",
30,
100,
function(Value)
    game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
end
)

--Speed Framework

local checks = {
"Ammo",
"ammo",
"Damage",
"damage",
"Firerate",
"firerate",
"FireRate",
"fireRate",
"Recoil",
"recoil",
"Spread",
"spread",
"ability",
"Ability"
}
for i, v in pairs(getgc(true)) do
for x = 1, #checks do
    if type(v) == "table" and rawget(v, checks[x]) then
        spawn(
            function()
                while true do
                    wait()
                    v.additionalSpeed = v_AddSpeed
                end
            end
        )
    end
end
end

--Zoom Framework

local checks = {
"Ammo",
"ammo",
"Damage",
"damage",
"Firerate",
"firerate",
"FireRate",
"fireRate",
"Recoil",
"recoil",
"Spread",
"spread",
"ability",
"Ability"
}
for i, v in pairs(getgc(true)) do
for x = 1, #checks do
    if type(v) == "table" and rawget(v, checks[x]) then
        spawn(
            function()
                while true do
                    wait()
                    v.zoomAmount = v_ZOOM
                end
            end
        )
    end
end
end

--Silent Aim Framework
local m = getrawmetatable(game)
local runservice = game:GetService("RunService")
local uis = game:GetService("UserInputService")
setreadonly(m, false)


function GetPlayer()
local temp_PlayerTable = {}
for i, v in pairs(game:GetService("Players"):GetPlayers()) do
    if v.Character and v ~= game:GetService("Players").LocalPlayer then
        if v.Team ~= game:GetService("Players").LocalPlayer.Team and v.Character:FindFirstChild("Humanoid") and not v.Character:FindFirstChildOfClass("ForceField") and v.Character:FindFirstChild("Head") then
            table.insert(temp_PlayerTable,v)
        end
    end
end
return temp_PlayerTable[math.random(1,#temp_PlayerTable)].Character
end

local mt = getrawmetatable(game)
local namecallold = mt.__namecall
local index = mt.__index
setreadonly(mt, false)
mt.__namecall = newcclosure(function(self, ...)
local args = {...}
if getnamecallmethod() == "FireServer" then
    if t_SilentAim == true then
        if tostring(self) == "new projectile" then
            if args[1] then
                if args[1][1] then
                    warn('roblox')
                    if #args[1][1] == 3 and GetPlayer() then
                        Targ = GetPlayer()
                        local A_1 = {
                            [1] = {
                                [1] = Targ.Humanoid,
                                [2] = args[1][1][2],
                                [3] = 235,
                                [4] = Targ.Head.Position,
                                [5] = false,
                                [6] = false,
                                [7] = false
                            },
                            [2] = {
                                [1] = false,
                                [2] = false,
                                [3] = false,
                                [4] = false,
                                [5] = false,
                                [6] = 2,
                                [7] = 2
                            }
                        }
                        game:GetService("Workspace")["__THINGS"]["__REMOTES"]["do damage"]:FireServer(A_1)
                    end
                end
            end
        end
    end
end
return namecallold(self, ...)
end)
setreadonly(mt, true)


--CrossHair Colors
function CrossHairColor(COLOR)
for i, v in pairs(game:GetService("Players").Wowtheskyispurple.PlayerGui.Crosshair.Frame:GetChildren()) do
    pcall(
        function()
            v.BackgroundColor3 = COLOR
        end
    )
end
end
--Extras

local checks = {
"Ammo",
"ammo",
"Damage",
"damage",
"Firerate",
"firerate",
"FireRate",
"fireRate",
"Recoil",
"recoil",
"Spread",
"spread",
"ability",
"Ability"
}
for i, v in pairs(getgc(true)) do
for x = 1, #checks do
    if type(v) == "table" and rawget(v, checks[x]) then
        v.description = "-Fope Hub"
    end
end
end

setting = {}

ESPBOXS = {}
ESPLINES = {}
yescolors = Color3.fromRGB(0, 255, 255)
local a
local b

function partPos(part)
return workspace.CurrentCamera:WorldToViewportPoint(part)
end
yescolors = Color3.new(1, 0, 1)
function esp(char)
coroutine.resume(
    coroutine.create(
        function()
            local espBox = Drawing.new("Square")
            espBox.Color = yescolors
            espBox.Thickness = 2
            --table.insert(ESPBOXS,espBox)
            espBox.Filled = false
            espBox.Transparency = 0.8
            game:GetService("RunService").Stepped:connect(
                function()
                    local success, response =
                        pcall(
                        function()
                            if char ~= nil then
                                local rootPos = partPos(char.HumanoidRootPart.Position)
                                local headPos = partPos(char.Head.Position + Vector3.new(0, 0.5, 0))
                                local legPos = partPos(char.HumanoidRootPart.Position - Vector3.new(0, 3, 0))
                                espBox.Size = Vector2.new(2350 / rootPos.Z, headPos.Y - legPos.Y)
                                espBox.Color = yescolors
                                espBox.Position =
                                    Vector2.new(rootPos.X - espBox.Size.X / 2, rootPos.Y - espBox.Size.Y / 2)
                            end
                            local _, screen =
                                workspace.CurrentCamera:WorldToViewportPoint(char.HumanoidRootPart.Position)
                            if
                                screen and
                                    (game.Players:GetPlayerFromCharacter(char).Team ~= game.Players.LocalPlayer.Team or
                                        setting.ffa)
                             then
                                if char.Parent == nil then
                                    espBox.Visible = false
                                end
                                if setting.esp and setting.espBox then
                                    espBox.Visible = true
                                else
                                    espBox.Visible = false
                                end
                            else
                                espBox.Visible = false
                            end
                        end
                    )
                    if not success then
                        espBox.Visible = false
                    end
                end
            )
        end
    )
)
end
for i, v in next, game.Players:GetPlayers() do
if v ~= game.Players.LocalPlayer then
    if v.Character:FindFirstChild("HumanoidRootPart") then
        esp(v.Character)
    end
    v.CharacterAdded:connect(
        function(char)
            esp(char)
        end
    )
end
end

game.Players.PlayerAdded:connect(
function(plr)
    if plr:FindFirstChild("HumanoidRootPart") then
        esp(v.Character)
    end
    plr.CharacterAdded:connect(
        function(char)
            esp(char)
        end
    )
end
)

local e = main:Tab("ESP")
e:Toggle(
"ESP",
function(state)
    setting.esp = state
end
)
e:Toggle(
"Boxes",
function(state)
    setting.espBox = state
end
)
e:Toggle(
"FFA",
function(state)
    setting.ffa = state
end
)

e:Colorpicker(
"ColorPicker",
Color3.fromRGB(0, 255, 255),
function(ColoRr)
    yescolors = ColoRr
end
)


